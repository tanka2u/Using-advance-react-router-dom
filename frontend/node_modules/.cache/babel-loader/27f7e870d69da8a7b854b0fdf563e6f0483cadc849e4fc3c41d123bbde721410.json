{"ast":null,"code":"var _jsxFileName = \"D:\\\\project what I done\\\\React-EventGenerator\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './Pages/Home';\nimport EventsPage from './Pages/Events';\nimport EventDetailPage from './Pages/EventDetail';\nimport NewEventPage from './Pages/NewEvent';\nimport EditEventPage from './Pages/EditEvent';\nimport RootPage from './Pages/Root';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 24\n  }, this),\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }, this)\n  }, {\n    path: '/events/:eventID',\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 42\n    }, this)\n  }, {\n    path: '/events/new',\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 37\n    }, this)\n  }, {\n    path: '/events/:eventID/edit',\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 47\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","RootPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","App","_c","$RefreshReg$"],"sources":["D:/project what I done/React-EventGenerator/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport {RouterProvider, createBrowserRouter} from 'react-router-dom';\nimport HomePage from './Pages/Home';\nimport EventsPage from './Pages/Events';\nimport EventDetailPage from './Pages/EventDetail';\nimport NewEventPage from './Pages/NewEvent';\nimport EditEventPage from './Pages/EditEvent';\nimport RootPage from './Pages/Root';\nconst router= createBrowserRouter([\n  { path: '/', element:<RootPage />, children: [\n    \n    { path: '/', element: <HomePage/>},\n    { path: '/events', element: <EventsPage/>},\n    { path: '/events/:eventID', element: <EventDetailPage/>},\n    { path: '/events/new', element: <NewEventPage/>},\n    { path: '/events/:eventID/edit', element: <EditEventPage/>},\n  ]},\n]);\nfunction App() {\n\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,QAAQ,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpC,MAAMC,MAAM,GAAET,mBAAmB,CAAC,CAChC;EAAEU,IAAI,EAAE,GAAG;EAAEC,OAAO,eAACH,OAAA,CAACF,QAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAAEC,QAAQ,EAAE,CAE3C;IAAEN,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAEH,OAAA,CAACP,QAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EAClC;IAAEL,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAEH,OAAA,CAACN,UAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EAC1C;IAAEL,IAAI,EAAE,kBAAkB;IAAEC,OAAO,eAAEH,OAAA,CAACL,eAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EACxD;IAAEL,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAEH,OAAA,CAACJ,YAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EAChD;IAAEL,IAAI,EAAE,uBAAuB;IAAEC,OAAO,eAAEH,OAAA,CAACH,aAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC;AAC5D,CAAC,CACH,CAAC;AACF,SAASE,GAAGA,CAAA,EAAG;EAEb,oBAAOT,OAAA,CAACT,cAAc;IAACU,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACG,EAAA,GAHQD,GAAG;AAKZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}