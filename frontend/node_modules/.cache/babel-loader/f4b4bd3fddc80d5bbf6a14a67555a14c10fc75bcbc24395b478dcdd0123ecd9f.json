{"ast":null,"code":"var _jsxFileName = \"D:\\\\project what I done\\\\React-EventGenerator\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./Pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./Pages/Events\";\nimport EventDetailPage, { action, action as deleteEventAction, loader as eventsDetailLoader } from \"./Pages/EventDetail\";\nimport NewEventPage from \"./Pages/NewEvent\";\nimport EditEventPage from \"./Pages/EditEvent\";\nimport RootPage from \"./Pages/Root\";\nimport EventRoot from \"./Pages/EventsRoot\";\nimport ErrorPage from \"./Pages/Error\";\nimport { action as manipulateEventAction } from \"./components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 19\n  }, this),\n  children: [{\n    path: \"events\"\n  }, {\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventRoot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \":eventID\",\n      id: \"event-detail\",\n      loader: eventsDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 26\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 26\n        }, this),\n        action: manipulateEventAction\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 22\n      }, this),\n      action: manipulateEventAction\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","action","deleteEventAction","eventsDetailLoader","NewEventPage","EditEventPage","RootPage","EventRoot","ErrorPage","manipulateEventAction","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["D:/project what I done/React-EventGenerator/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./Pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./Pages/Events\";\nimport EventDetailPage, {\n  action,\n  action as deleteEventAction,\n  loader as eventsDetailLoader,\n} from \"./Pages/EventDetail\";\nimport NewEventPage from \"./Pages/NewEvent\";\nimport EditEventPage from \"./Pages/EditEvent\";\nimport RootPage from \"./Pages/Root\";\nimport EventRoot from \"./Pages/EventsRoot\";\nimport ErrorPage from \"./Pages/Error\";\nimport { action as manipulateEventAction } from \"./components/EventForm\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootPage />,\n    errorElement: <ErrorPage />,\n    children: [\n      { path: \"events\" },\n      { index: true, element: <HomePage /> },\n      {\n        path: \"events\",\n        element: <EventRoot />,\n        children: [\n          {\n            index: true,\n            element: <EventsPage />,\n            loader: eventsLoader,\n          },\n          {\n            path: \":eventID\",\n            id: \"event-detail\",\n            loader: eventsDetailLoader,\n            children: [\n              {\n                index: true,\n                element: <EventDetailPage />,\n                action: deleteEventAction,\n              },\n              {\n                path: \"edit\",\n                element: <EditEventPage />,\n                action: manipulateEventAction,\n              },\n            ],\n          },\n          {\n            path: \"new\",\n            element: <NewEventPage />,\n            action: manipulateEventAction,\n          },\n        ],\n      },\n    ],\n  },\n]);\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}